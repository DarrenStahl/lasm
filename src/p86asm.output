Terminals unused in grammar

   "newline"


Grammar

    0 $accept: statements $end

    1 statements: /* empty */
    2           | statements statement

    3 statement: program_expr

    4 program_expr: code
    5             | label
    6             | directive
    7             | keyword_error

    8 keyword_error: "opcode" ":"

    9 directive: directive_key "directive" directive_value

   10 directive_key: /* empty */
   11              | "directive-key"

   12 directive_value: reg_and_lookup_type
   13                | immediate_type

   14 code: "opcode" modifier params

   15 modifier: /* empty */
   16         | "word"
   17         | "byte"

   18 params: /* empty */
   19       | param "," param
   20       | param

   21 param: operand
   22      | "[" operand "]"
   23      | "[" operand "+" operand "]"
   24      | "[" operand "+" operand "+" operand "]"

   25 operand: reg_and_lookup_type
   26        | immediate_type

   27 reg_and_lookup_type: TEXT

   28 immediate_type: hex_type
   29               | binary_type
   30               | decimal_type
   31               | LITERAL

   32 binary_type: "prefixed-binary-value"
   33            | "suffixed-binary-value"

   34 hex_type: "prefixed-hex-value"
   35         | "suffixed-hex-value"

   36 decimal_type: "decimal-value"

   37 label: "label" ":"


Terminals, with rules where they appear

$end (0) 0
error (256)
":" (258) 8 37
"," (259) 19
"word" (260) 16
"byte" (261) 17
"[" (262) 22 23 24
"]" (263) 22 23 24
"+" (264) 23 24
"newline" (265)
"opcode" (266) 8 14
"prefixed-hex-value" (267) 34
"suffixed-hex-value" (268) 35
"decimal-value" (269) 36
"prefixed-binary-value" (270) 32
"suffixed-binary-value" (271) 33
LITERAL (272) 31
TEXT (273) 27
"directive-key" (274) 11
"directive" (275) 9
"label" (276) 37


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
statements (23)
    on left: 1 2, on right: 0 2
statement (24)
    on left: 3, on right: 2
program_expr (25)
    on left: 4 5 6 7, on right: 3
keyword_error (26)
    on left: 8, on right: 7
directive (27)
    on left: 9, on right: 6
directive_key (28)
    on left: 10 11, on right: 9
directive_value (29)
    on left: 12 13, on right: 9
code (30)
    on left: 14, on right: 4
modifier (31)
    on left: 15 16 17, on right: 14
params (32)
    on left: 18 19 20, on right: 14
param (33)
    on left: 21 22 23 24, on right: 19 20
operand (34)
    on left: 25 26, on right: 21 22 23 24
reg_and_lookup_type (35)
    on left: 27, on right: 12 25
immediate_type (36)
    on left: 28 29 30 31, on right: 13 26
binary_type (37)
    on left: 32 33, on right: 29
hex_type (38)
    on left: 34 35, on right: 28
decimal_type (39)
    on left: 36, on right: 30
label (40)
    on left: 37, on right: 5


state 0

    0 $accept: . statements $end

    $default  reduce using rule 1 (statements)

    statements  go to state 1


state 1

    0 $accept: statements . $end
    2 statements: statements . statement

    $end             shift, and go to state 2
    "opcode"         shift, and go to state 3
    "directive-key"  shift, and go to state 4
    "label"          shift, and go to state 5

    $default  reduce using rule 10 (directive_key)

    statement      go to state 6
    program_expr   go to state 7
    keyword_error  go to state 8
    directive      go to state 9
    directive_key  go to state 10
    code           go to state 11
    label          go to state 12


state 2

    0 $accept: statements $end .

    $default  accept


state 3

    8 keyword_error: "opcode" . ":"
   14 code: "opcode" . modifier params

    ":"     shift, and go to state 13
    "word"  shift, and go to state 14
    "byte"  shift, and go to state 15

    $default  reduce using rule 15 (modifier)

    modifier  go to state 16


state 4

   11 directive_key: "directive-key" .

    $default  reduce using rule 11 (directive_key)


state 5

   37 label: "label" . ":"

    ":"  shift, and go to state 17


state 6

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 7

    3 statement: program_expr .

    $default  reduce using rule 3 (statement)


state 8

    7 program_expr: keyword_error .

    $default  reduce using rule 7 (program_expr)


state 9

    6 program_expr: directive .

    $default  reduce using rule 6 (program_expr)


state 10

    9 directive: directive_key . "directive" directive_value

    "directive"  shift, and go to state 18


state 11

    4 program_expr: code .

    $default  reduce using rule 4 (program_expr)


state 12

    5 program_expr: label .

    $default  reduce using rule 5 (program_expr)


state 13

    8 keyword_error: "opcode" ":" .

    $default  reduce using rule 8 (keyword_error)


state 14

   16 modifier: "word" .

    $default  reduce using rule 16 (modifier)


state 15

   17 modifier: "byte" .

    $default  reduce using rule 17 (modifier)


state 16

   14 code: "opcode" modifier . params

    "["                      shift, and go to state 19
    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    $default  reduce using rule 18 (params)

    params               go to state 27
    param                go to state 28
    operand              go to state 29
    reg_and_lookup_type  go to state 30
    immediate_type       go to state 31
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 17

   37 label: "label" ":" .

    $default  reduce using rule 37 (label)


state 18

    9 directive: directive_key "directive" . directive_value

    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    directive_value      go to state 35
    reg_and_lookup_type  go to state 36
    immediate_type       go to state 37
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 19

   22 param: "[" . operand "]"
   23      | "[" . operand "+" operand "]"
   24      | "[" . operand "+" operand "+" operand "]"

    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    operand              go to state 38
    reg_and_lookup_type  go to state 30
    immediate_type       go to state 31
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 20

   34 hex_type: "prefixed-hex-value" .

    $default  reduce using rule 34 (hex_type)


state 21

   35 hex_type: "suffixed-hex-value" .

    $default  reduce using rule 35 (hex_type)


state 22

   36 decimal_type: "decimal-value" .

    $default  reduce using rule 36 (decimal_type)


state 23

   32 binary_type: "prefixed-binary-value" .

    $default  reduce using rule 32 (binary_type)


state 24

   33 binary_type: "suffixed-binary-value" .

    $default  reduce using rule 33 (binary_type)


state 25

   31 immediate_type: LITERAL .

    $default  reduce using rule 31 (immediate_type)


state 26

   27 reg_and_lookup_type: TEXT .

    $default  reduce using rule 27 (reg_and_lookup_type)


state 27

   14 code: "opcode" modifier params .

    $default  reduce using rule 14 (code)


state 28

   19 params: param . "," param
   20       | param .

    ","  shift, and go to state 39

    $default  reduce using rule 20 (params)


state 29

   21 param: operand .

    $default  reduce using rule 21 (param)


state 30

   25 operand: reg_and_lookup_type .

    $default  reduce using rule 25 (operand)


state 31

   26 operand: immediate_type .

    $default  reduce using rule 26 (operand)


state 32

   29 immediate_type: binary_type .

    $default  reduce using rule 29 (immediate_type)


state 33

   28 immediate_type: hex_type .

    $default  reduce using rule 28 (immediate_type)


state 34

   30 immediate_type: decimal_type .

    $default  reduce using rule 30 (immediate_type)


state 35

    9 directive: directive_key "directive" directive_value .

    $default  reduce using rule 9 (directive)


state 36

   12 directive_value: reg_and_lookup_type .

    $default  reduce using rule 12 (directive_value)


state 37

   13 directive_value: immediate_type .

    $default  reduce using rule 13 (directive_value)


state 38

   22 param: "[" operand . "]"
   23      | "[" operand . "+" operand "]"
   24      | "[" operand . "+" operand "+" operand "]"

    "]"  shift, and go to state 40
    "+"  shift, and go to state 41


state 39

   19 params: param "," . param

    "["                      shift, and go to state 19
    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    param                go to state 42
    operand              go to state 29
    reg_and_lookup_type  go to state 30
    immediate_type       go to state 31
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 40

   22 param: "[" operand "]" .

    $default  reduce using rule 22 (param)


state 41

   23 param: "[" operand "+" . operand "]"
   24      | "[" operand "+" . operand "+" operand "]"

    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    operand              go to state 43
    reg_and_lookup_type  go to state 30
    immediate_type       go to state 31
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 42

   19 params: param "," param .

    $default  reduce using rule 19 (params)


state 43

   23 param: "[" operand "+" operand . "]"
   24      | "[" operand "+" operand . "+" operand "]"

    "]"  shift, and go to state 44
    "+"  shift, and go to state 45


state 44

   23 param: "[" operand "+" operand "]" .

    $default  reduce using rule 23 (param)


state 45

   24 param: "[" operand "+" operand "+" . operand "]"

    "prefixed-hex-value"     shift, and go to state 20
    "suffixed-hex-value"     shift, and go to state 21
    "decimal-value"          shift, and go to state 22
    "prefixed-binary-value"  shift, and go to state 23
    "suffixed-binary-value"  shift, and go to state 24
    LITERAL                  shift, and go to state 25
    TEXT                     shift, and go to state 26

    operand              go to state 46
    reg_and_lookup_type  go to state 30
    immediate_type       go to state 31
    binary_type          go to state 32
    hex_type             go to state 33
    decimal_type         go to state 34


state 46

   24 param: "[" operand "+" operand "+" operand . "]"

    "]"  shift, and go to state 47


state 47

   24 param: "[" operand "+" operand "+" operand "]" .

    $default  reduce using rule 24 (param)
